@mixin css3-prefix($property, $value){
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value}
}

@mixin border-radius($radius) {
  @include css3-prefix('border-radius', $radius);
}

@mixin box-shadow($shadow) {
  @include css3-prefix('box-shadow', $shadow);
}

@mixin backface-visibility($back: hidden) {
  @include css3-prefix('backface-visibility', $back);
}

@mixin user-select($select) {
  -webkit-touch-callout: $select;
  @include css3-prefix('user-select', $select);
}

@mixin columns($count: 2, $gap: 0) {
  @include css3-prefix('column-count', $count);
  @include css3-prefix('column-gap', $gap);
}

@mixin background-size($size) {
  @include css3-prefix('background-size', $size);
}

@mixin transition($property: all, $duration: .4s, $easing: ease) {
  $transitions: ($property $duration $easing);
  @include css3-prefix('transition', $transitions);
}

@mixin imagenize() {
  image-rendering: -moz-crisp-edges;
  image-rendering:   -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  -ms-interpolation-mode: nearest-neighbor;
}

@mixin transform($params, $backface: false) {
  @include css3-prefix('transform', $params);
  @if $backface {
    -webkit-backface-visibility:hidden;
    backface-visibility:hidden;
  }
}
@mixin transform-origin($params) {
  @include css3-prefix('transform-origin', $params);
}

@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    -webkit-transform: translate(-50%, 0);
    -moz-transform: translate(-50%, 0);
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    -webkit-transform: translate(0, -50%);
    -moz-transform: translate(0, -50%);
    transform: translate(0, -50%);
  }
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}
@mixin animation($str) {
  @include css3-prefix('animation', $str);
}

@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder           { @content; }
  &::-moz-placeholder          { @content; }
  &:-ms-input-placeholder      { @content; }
}

//SCSS Triangle
@mixin triangle ($width:12px, $height:10px, $color:#000, $direction: top) {
  position: absolute;
  content: '';
  height: 0;
  width: 0;

  @if $direction == top {
    border-top: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-bottom: $height solid $color;
    top: -$height;
    left: 50%;
    @include transform(translateX(-50%));
  } @else if $direction == right {
    border-right: 0;
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-left: $height solid $color;
    right: -$height;
    top: 50%;
    @include transform(translateY(-50%));
  } @else if $direction == bottom {
    border-bottom: 0;
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-top: $height solid $color;
    bottom: -$height;
    left: 50%;
    @include transform(translateX(-50%));
  } @else {
    border-left: 0;
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-right: $height solid $color;
    left: -$height;
    top: 50%;
    @include transform(translateY(-50%));
  }

}

@mixin declare-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal) {
  @font-face {
    font-family: '#{$font-family}';
    src: url('../fonts/#{$font-filename}.eot');
    src: url('../fonts/#{$font-filename}.eot?#iefix') format('embedded-opentype'),
    url('../fonts/#{$font-filename}.woff') format('woff'),
    url('../fonts/#{$font-filename}.ttf') format('truetype'),
    url('../fonts/#{$font-filename}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style
  }
}
@mixin svg-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal) {
  @font-face {
    font-family: '#{$font-family}';
    src: url('../fonts/#{$font-filename}.svg##{$font-family}') format('svg');
    font-weight: $font-weight;
    font-style: $font-style
  }
}

@include declare-font-face('Helvetica Neue', 'HelveticaNeueCyr-Medium', 500);

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @include svg-font-face('Helvetica Neue', 'HelveticaNeueCyr-Medium', 500);
}

// responsive fonts + line-heights + padding & margin !!!
$font-base: 16px;
/// Strips the unit from a number.
@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}
// Convert pixels to rems
// eg. for a relational value of 12px write rem(12)
// Assumes $font-base is the font-size of <html>
@function rem($pxval) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  $base: $font-base;
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1rem;
}


$container: 1140px;
$color: #ff4e50;
$font: 'Helvetica Neue', 'Arial', sans-serif;

* {
  margin: 0;
  padding: 0;
  outline: 0 none;
  box-sizing: border-box;
  border-collapse: collapse;
  -webkit-box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}
*:before, *:after {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

html {
  -webkit-font-smoothing: antialiased;
  -webkit-overflow-scrolling: touch;
  -webkit-text-size-adjust: none;
  -ms-text-size-adjust: none;
}
html, body {height: 100%; margin: 0}

hr {
  height: 0;
  border: 0;
  font-size: 0;
  clear: both;
  display: block;
  overflow: hidden;
}

article, aside, details, figcaption, figure, footer, header, nav, section, summary {display: block}
ol, ul {list-style: none;}
h1, h2, h3, h4, h5 {font-weight: normal;}
mark {background: none;}
button {background: rgba(255, 255, 255, 0); border: medium none;}
table {border-spacing: 0;}
td {vertical-align: middle;}

img {
  max-width: 100%;
  display: block;
  height: auto;
}

a {
  color: #27f;
  outline: 0 none;
  text-decoration: none;
  @include transition();
  &:hover {
    outline: 0 none;
    text-decoration: none;
  }
  > img {border: 0}
}

input, select, textarea {
  @include transition();
  @include border-radius(0);
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -webkit-appearance: none;
  outline: 0 none;
  width: 100%;
}
input[type="submit"], input[type="button"] {
  cursor: pointer;
  -webkit-appearance: none;
  border: none;
  width: auto;
}
input, textarea {@include placeholder {color: #999;}}

// selection
::-moz-selection {color: #fff; background: $color;}
::selection {color: #fff; background: $color;}
:focus {outline:none;}
::-moz-focus-inner {border:0;}

// fullframe video
.fullframe {height: 0;margin: 0;overflow: hidden;padding-bottom: 56.5%;position: relative;z-index: 0;
  > {
    iframe, object, embed {height: 100%;left: 0;position: absolute;top: 0;width: 100%;z-index: -1}
  }
}

/*.left,*/ .alignleft, .al {float: left}
/*.right,*/ .alignright, .ar {float: right}
.aligncenter, .ac {margin-left: auto;margin-right: auto}

.valign {
  display: inline-block;
  vertical-align: middle;
  max-width: 94%
}
.vfix {
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  width: 0
}

.wrap {
  font-size: 0;
  text-align: center;
  .item {
    display: inline-block;
    vertical-align: top;
  }
}

//cf7
div.wpcf7 {
  .wpcf7-form-control-wrap {
    display: block !important;
    margin-bottom: 20px;
    clear: both;
  }
  .wpcf7-not-valid-tip {
    background: #fff;
    border: 1px solid #FF0000;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    cursor: pointer;
    font-family: $font;
    height: 30px;
    line-height: 30px;
    padding: 0 10px;
  }
  .wpcf7-response-output {
    float: left;
    width: 100%;
    margin: 10px 0 0 0;
    font-family: $font;
    line-height: 20px;
    padding: 5px 20px;
    text-align: center;
    &.wpcf7-validation-errors {
      background:#FF5F5F;
      color:#fff
    }
    &.wpcf7-mail-sent-ng {
      background:#1091ae;
      color:#fff
    }
    &.wpcf7-mail-sent-ok {
      background:#16A085;
      color:#fff
    }
  }
  .ajax-loader {
    display: none;
  }
  input:not([type="submit"]), textarea {
    width: 100%;
    border: 1px solid #086195;
    padding: 0 12px;
    display: block;
    height: 49px;
    @include border-radius(5px);
    margin: 0 auto 20px;
    font: 400 16px $font;
    @include placeholder {color: #999;}
    &:focus {
      background: rgba(8, 97, 149, 0.08);
    }
  }
  textarea {
    resize: none;
    overflow: auto;
    height: 150px;
    padding: 10px;
  }
}

//select
.selbel_w {
  position: relative;
  display: block;
  width: 100%;
  font: 400 14px/40px $font;
  height: 40px;
  select {
    width: 100%;
    height: 100%;
    cursor: pointer;
    position: relative;
    display: block;
    z-index: 1;
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    + span {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: #fff;
      color: #555;
      padding: 0 10px;
      @include border-radius(5px);
      border: 1px solid #eee;
      &:after {
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 9px 5px 0 5px;
        border-color: #555 transparent transparent transparent;
        position: absolute;
        right: 13px;
        top: 16px;
      }
      &.err {
        border-color: #ef4036
      }
    }
    option {
      padding: 5px
    }
  }
}

// menu button
$line-thickness: 4px; // The thickness of the button lines, also need to improve -> &:after {top: ?px} !
$line-position: 18px; // The spacing between lines, also need to improve -> &:after {top: ?px} !
$button-color: #fff; // The color of button

#menuopen {
  display: none;
  position: absolute;
  top: 24px;
  right: 0;
  width: 23px;
  height: 27px;
  cursor: pointer;
  z-index: 2000;
  @include transition(all, .35s, ease);
  &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: $line-thickness;
    box-shadow: 0 $line-thickness 0 0 $button-color, 0 $line-position 0 0 $button-color;
    -webkit-box-shadow: 0 $line-thickness 0 0 $button-color, 0 $line-position 0 0 $button-color;
    -moz-box-shadow: 0 $line-thickness 0 0 $button-color, 0 $line-position 0 0 $button-color;
    @include border-radius(3px);
    @include transition(all, .35s, ease);
  }
  &:after {
    content: '';
    position: absolute;
    top: 7px; // Need to improve if both $line-thickness and $line-position changed !
    height: $line-thickness;
    @include box-shadow(0 $line-thickness 0 0 $button-color);
    @include border-radius(3px);
    @include transition(all, .35s, ease);
  }
  &.active:before, &.active:after {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    background: $button-color;
    @include box-shadow(none);
    @include border-radius(3px);
  }
  &.active:before {
    @include backface-visibility();
    @include transform(rotate(-45deg) translate(-7px, 7px));
  }
  &.active:after {
    @include backface-visibility();
    @include transform(rotate(45deg) translate(7px, 7px));
  }
}
// menu button


// fontastic
// fontastic
